{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Murphy\\\\Downloads\\\\USB-Backup\\\\Grant-AI\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Matching\\\\Matching.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Dashboard/Matching/Matching.js\nimport React, { useState, useEffect } from 'react';\nimport MatchResults from './MatchResults';\nimport ClientProfile from './ClientProfile';\nimport GrantRecommendations from './GrantRecommendations';\nimport './Matching.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Matching = () => {\n  _s();\n  const [view, setView] = useState('analyze'); // 'analyze', 'results', 'recommendations'\n  const [clients, setClients] = useState([]);\n  const [sources, setSources] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n\n  // Mock data - replace with actual API calls\n  useEffect(() => {\n    // Mock clients data\n    const mockClients = [{\n      id: '1',\n      name: 'Tech4Kids Foundation',\n      type: 'nonprofit',\n      category: 'Education',\n      mission: 'Providing STEM education to underprivileged youth',\n      budget: 500000,\n      location: 'National',\n      targetPopulation: ['Youth', 'Low-income households', 'BIPOC communities'],\n      focusAreas: ['STEM Education', 'Youth Development', 'Technology Access'],\n      previousGrants: ['NSF Education Grant - $250,000', 'Google.org Tech Initiative - $150,000'],\n      eligibility: '501(c)(3) nonprofit, 3+ years of operation',\n      contact: {\n        name: 'Sarah Johnson',\n        email: 'sarah@tech4kids.org',\n        phone: '(555) 123-4567'\n      }\n    }, {\n      id: '2',\n      name: 'Green Earth Alliance',\n      type: 'nonprofit',\n      category: 'Environment',\n      mission: 'Promoting environmental conservation and sustainable practices',\n      budget: 750000,\n      location: 'Regional',\n      targetPopulation: ['General Public', 'Rural populations', 'Indigenous communities'],\n      focusAreas: ['Environmental Conservation', 'Climate Change', 'Sustainable Agriculture'],\n      previousGrants: ['EPA Conservation Grant - $500,000', 'Ford Foundation - $200,000'],\n      eligibility: '501(c)(3) nonprofit, environmental focus',\n      contact: {\n        name: 'Michael Chen',\n        email: 'michael@greenearth.org',\n        phone: '(555) 234-5678'\n      }\n    }, {\n      id: '3',\n      name: 'Community Health Alliance',\n      type: 'nonprofit',\n      category: 'Healthcare',\n      mission: 'Improving healthcare access in underserved communities',\n      budget: 1200000,\n      location: 'Local',\n      targetPopulation: ['Low-income households', 'Seniors', 'People with disabilities'],\n      focusAreas: ['Healthcare Access', 'Preventive Care', 'Mental Health'],\n      previousGrants: ['Robert Wood Johnson Foundation - $750,000', 'State Health Dept - $300,000'],\n      eligibility: '501(c)(3) nonprofit, healthcare provider',\n      contact: {\n        name: 'Dr. Maria Rodriguez',\n        email: 'maria@healthalliance.org',\n        phone: '(555) 345-6789'\n      }\n    }, {\n      id: '4',\n      name: 'Arts for All Initiative',\n      type: 'nonprofit',\n      category: 'Arts & Culture',\n      mission: 'Making arts education accessible to all communities',\n      budget: 300000,\n      location: 'Statewide',\n      targetPopulation: ['Youth', 'Seniors', 'People with disabilities'],\n      focusAreas: ['Arts Education', 'Cultural Programs', 'Community Arts'],\n      previousGrants: ['NEA Arts Grant - $100,000', 'Local Arts Council - $50,000'],\n      eligibility: '501(c)(3) nonprofit, arts organization',\n      contact: {\n        name: 'Emily Watson',\n        email: 'emily@artsforall.org',\n        phone: '(555) 456-7890'\n      }\n    }];\n\n    // Mock sources data (simplified from Sources.js)\n    const mockSources = [{\n      id: '1',\n      name: 'National Science Foundation',\n      type: 'government',\n      category: 'STEM Education',\n      grants: [{\n        id: 'nsf-1',\n        title: 'STEM Education Research Grants',\n        amount: '$500,000 - $1,500,000',\n        deadline: '2024-03-15',\n        category: 'Research',\n        status: 'active',\n        eligibility: 'Universities, Research Institutions, Non-profit STEM Organizations',\n        focusAreas: ['STEM Education', 'Research', 'Technology']\n      }]\n    }, {\n      id: '2',\n      name: 'Ford Foundation',\n      type: 'private_foundation',\n      category: 'Social Justice',\n      grants: [{\n        id: 'ford-1',\n        title: 'Racial Justice Initiative',\n        amount: '$250,000 - $1,000,000',\n        deadline: '2024-06-30',\n        category: 'Social Justice',\n        status: 'active',\n        eligibility: 'Nonprofits, Community Organizations, Advocacy Groups',\n        focusAreas: ['Social Justice', 'Equity', 'Community Development']\n      }]\n    }, {\n      id: '3',\n      name: 'Department of Energy',\n      type: 'government',\n      category: 'Clean Energy',\n      grants: [{\n        id: 'doe-1',\n        title: 'Solar Energy Research Program',\n        amount: '$1,000,000 - $5,000,000',\n        deadline: '2024-04-20',\n        category: 'Research',\n        status: 'active',\n        eligibility: 'Research Institutions, Energy Companies, Universities',\n        focusAreas: ['Renewable Energy', 'Climate Change', 'Innovation']\n      }]\n    }];\n    setClients(mockClients);\n    setSources(mockSources);\n  }, []);\n  const analyzeClientMatches = client => {\n    setLoading(true);\n    setSelectedClient(client);\n\n    // Simulate AI analysis with timeout\n    setTimeout(() => {\n      const analysisResults = performAIAnalysis(client, sources);\n      setAnalysis(analysisResults);\n      setMatches(analysisResults.matches);\n      setView('results');\n      setLoading(false);\n    }, 2000);\n  };\n  const performAIAnalysis = (client, allSources) => {\n    let matches = [];\n    let analysis = {\n      clientStrengths: [],\n      improvementAreas: [],\n      matchFactors: [],\n      timeline: []\n    };\n\n    // Analyze each source and grant for matches\n    allSources.forEach(source => {\n      source.grants.forEach(grant => {\n        const matchScore = calculateMatchScore(client, grant, source);\n        if (matchScore >= 60) {\n          // Only include matches with 60%+ score\n          matches.push({\n            grant,\n            source,\n            matchScore,\n            matchReasons: getMatchReasons(client, grant, source),\n            fitAnalysis: analyzeFit(client, grant, source),\n            timeline: generateTimeline(grant.deadline),\n            actionSteps: generateActionSteps(client, grant)\n          });\n        }\n      });\n    });\n\n    // Sort matches by score (highest first)\n    matches.sort((a, b) => b.matchScore - a.matchScore);\n\n    // Generate client analysis\n    analysis.clientStrengths = analyzeClientStrengths(client, matches);\n    analysis.improvementAreas = analyzeImprovementAreas(client, matches);\n    analysis.matchFactors = analyzeMatchFactors(client, matches);\n    analysis.timeline = generateOverallTimeline(matches);\n    return {\n      matches,\n      analysis\n    };\n  };\n  const calculateMatchScore = (client, grant, source) => {\n    let score = 0;\n    let factors = [];\n\n    // Category match (30%)\n    if (client.category === source.category) {\n      score += 30;\n      factors.push('Perfect category alignment');\n    } else if (hasOverlap(client.focusAreas, grant.focusAreas)) {\n      score += 20;\n      factors.push('Focus area overlap');\n    }\n\n    // Budget alignment (25%)\n    const grantAmount = extractMaxAmount(grant.amount);\n    if (grantAmount && client.budget) {\n      const budgetRatio = Math.min(client.budget / grantAmount, 1);\n      if (budgetRatio >= 0.8) {\n        score += 25;\n        factors.push('Ideal budget alignment');\n      } else if (budgetRatio >= 0.5) {\n        score += 15;\n        factors.push('Reasonable budget range');\n      }\n    }\n\n    // Geographic alignment (20%)\n    if (client.location === 'National' || client.location === 'Regional' && source.type === 'private_foundation' || client.location === 'Local' && source.type === 'community') {\n      score += 20;\n      factors.push('Geographic compatibility');\n    }\n\n    // Target population alignment (15%)\n    if (hasOverlap(client.targetPopulation, extractTargetPopulation(grant))) {\n      score += 15;\n      factors.push('Target population match');\n    }\n\n    // Previous experience bonus (10%)\n    if (hasRelevantExperience(client, source.category)) {\n      score += 10;\n      factors.push('Relevant previous experience');\n    }\n    return Math.min(score, 100);\n  };\n\n  // Helper functions for analysis\n  const hasOverlap = (arr1, arr2) => {\n    return arr1.some(item => arr2.includes(item));\n  };\n  const extractMaxAmount = amountString => {\n    const match = amountString.match(/\\$?([\\d,]+)/g);\n    if (match) {\n      const amounts = match.map(amt => parseInt(amt.replace(/[$,]/g, '')));\n      return Math.max(...amounts);\n    }\n    return null;\n  };\n  const extractTargetPopulation = grant => {\n    // This would be more sophisticated in a real implementation\n    const populationKeywords = {\n      'STEM Education': ['Youth', 'Students'],\n      'Social Justice': ['BIPOC communities', 'Marginalized groups'],\n      'Environment': ['General Public', 'Communities'],\n      'Healthcare': ['Low-income households', 'Seniors']\n    };\n    return populationKeywords[grant.category] || ['General Public'];\n  };\n  const hasRelevantExperience = (client, category) => {\n    return client.previousGrants.some(grant => grant.toLowerCase().includes(category.toLowerCase()));\n  };\n  const getMatchReasons = (client, grant, source) => {\n    const reasons = [];\n    if (client.category === source.category) {\n      reasons.push(`Your ${client.category} focus aligns perfectly with ${source.name}'s mission`);\n    }\n    if (hasOverlap(client.focusAreas, grant.focusAreas)) {\n      reasons.push(`Shared focus on ${client.focusAreas.find(f => grant.focusAreas.includes(f))}`);\n    }\n    if (hasOverlap(client.targetPopulation, extractTargetPopulation(grant))) {\n      reasons.push(`Target population alignment`);\n    }\n    return reasons;\n  };\n  const analyzeFit = (client, grant, source) => {\n    const fit = {\n      strengths: [],\n      considerations: []\n    };\n\n    // Strengths\n    if (client.category === source.category) {\n      fit.strengths.push('Perfect mission alignment');\n    }\n    if (client.budget >= extractMaxAmount(grant.amount) * 0.5) {\n      fit.strengths.push('Strong financial capacity');\n    }\n    if (hasRelevantExperience(client, source.category)) {\n      fit.strengths.push('Proven track record in this area');\n    }\n\n    // Considerations\n    if (client.budget < extractMaxAmount(grant.amount) * 0.3) {\n      fit.considerations.push('May need additional funding partners');\n    }\n    if (grant.deadline && daysUntilDeadline(grant.deadline) < 60) {\n      fit.considerations.push('Tight application timeline');\n    }\n    return fit;\n  };\n  const daysUntilDeadline = deadline => {\n    const today = new Date();\n    const deadlineDate = new Date(deadline);\n    return Math.ceil((deadlineDate - today) / (1000 * 60 * 60 * 24));\n  };\n  const generateTimeline = deadline => {\n    const days = daysUntilDeadline(deadline);\n    return [{\n      step: 'Initial Research',\n      due: '1 week',\n      status: 'pending'\n    }, {\n      step: 'Proposal Draft',\n      due: `${Math.max(7, days - 45)} days`,\n      status: 'pending'\n    }, {\n      step: 'Budget Preparation',\n      due: `${Math.max(7, days - 30)} days`,\n      status: 'pending'\n    }, {\n      step: 'Final Review',\n      due: `${Math.max(3, days - 14)} days`,\n      status: 'pending'\n    }, {\n      step: 'Submission',\n      due: `${days} days`,\n      status: 'pending'\n    }];\n  };\n  const generateActionSteps = (client, grant) => {\n    const steps = ['Review full RFP requirements', 'Gather required documentation', 'Schedule planning meeting with team'];\n    if (!hasRelevantExperience(client, grant.category)) {\n      steps.push('Develop case studies demonstrating relevant capacity');\n    }\n    if (daysUntilDeadline(grant.deadline) < 90) {\n      steps.push('Expedite proposal development process');\n    }\n    return steps;\n  };\n  const analyzeClientStrengths = (client, matches) => {\n    const strengths = [];\n    if (matches.some(m => m.matchScore >= 90)) {\n      strengths.push('Excellent alignment with multiple high-value opportunities');\n    }\n    if (client.previousGrants.length >= 2) {\n      strengths.push('Strong track record of successful grant acquisition');\n    }\n    if (client.budget >= 500000) {\n      strengths.push('Substantial organizational capacity for large grants');\n    }\n    return strengths;\n  };\n  const analyzeImprovementAreas = (client, matches) => {\n    const areas = [];\n    if (!matches.some(m => m.matchScore >= 80)) {\n      areas.push('Consider expanding program areas to access more funding opportunities');\n    }\n    if (client.previousGrants.length === 0) {\n      areas.push('Build grant writing capacity and track record');\n    }\n    return areas;\n  };\n  const analyzeMatchFactors = (client, matches) => {\n    const factors = [];\n    const categoryMatches = matches.filter(m => client.category === m.source.category);\n    if (categoryMatches.length > 0) {\n      factors.push(`Strong presence in ${client.category} funding space`);\n    }\n    const highBudgetMatches = matches.filter(m => client.budget >= extractMaxAmount(m.grant.amount) * 0.7);\n    if (highBudgetMatches.length > 0) {\n      factors.push('Well-positioned for major grants');\n    }\n    return factors;\n  };\n  const generateOverallTimeline = matches => {\n    const deadlines = matches.map(m => ({\n      grant: m.grant.title,\n      deadline: m.grant.deadline\n    })).sort((a, b) => new Date(a.deadline) - new Date(b.deadline)).slice(0, 3);\n    return deadlines;\n  };\n  const handleViewRecommendations = () => {\n    setView('recommendations');\n  };\n  const handleNewAnalysis = () => {\n    setView('analyze');\n    setSelectedClient(null);\n    setMatches([]);\n    setAnalysis(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matching-container\",\n    children: [view === 'analyze' && /*#__PURE__*/_jsxDEV(ClientProfile, {\n      clients: clients,\n      onAnalyzeClient: analyzeClientMatches,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 9\n    }, this), view === 'results' && /*#__PURE__*/_jsxDEV(MatchResults, {\n      client: selectedClient,\n      matches: matches,\n      analysis: analysis,\n      onViewRecommendations: handleViewRecommendations,\n      onNewAnalysis: handleNewAnalysis,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }, this), view === 'recommendations' && /*#__PURE__*/_jsxDEV(GrantRecommendations, {\n      client: selectedClient,\n      matches: matches,\n      analysis: analysis,\n      onBackToResults: () => setView('results'),\n      onNewAnalysis: handleNewAnalysis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n};\n_s(Matching, \"nhYpGACG897cRQWtwhuiTqUWoQ4=\");\n_c = Matching;\nexport default Matching;\nvar _c;\n$RefreshReg$(_c, \"Matching\");","map":{"version":3,"names":["React","useState","useEffect","MatchResults","ClientProfile","GrantRecommendations","jsxDEV","_jsxDEV","Matching","_s","view","setView","clients","setClients","sources","setSources","selectedClient","setSelectedClient","matches","setMatches","loading","setLoading","analysis","setAnalysis","mockClients","id","name","type","category","mission","budget","location","targetPopulation","focusAreas","previousGrants","eligibility","contact","email","phone","mockSources","grants","title","amount","deadline","status","analyzeClientMatches","client","setTimeout","analysisResults","performAIAnalysis","allSources","clientStrengths","improvementAreas","matchFactors","timeline","forEach","source","grant","matchScore","calculateMatchScore","push","matchReasons","getMatchReasons","fitAnalysis","analyzeFit","generateTimeline","actionSteps","generateActionSteps","sort","a","b","analyzeClientStrengths","analyzeImprovementAreas","analyzeMatchFactors","generateOverallTimeline","score","factors","hasOverlap","grantAmount","extractMaxAmount","budgetRatio","Math","min","extractTargetPopulation","hasRelevantExperience","arr1","arr2","some","item","includes","amountString","match","amounts","map","amt","parseInt","replace","max","populationKeywords","toLowerCase","reasons","find","f","fit","strengths","considerations","daysUntilDeadline","today","Date","deadlineDate","ceil","days","step","due","steps","m","length","areas","categoryMatches","filter","highBudgetMatches","deadlines","slice","handleViewRecommendations","handleNewAnalysis","className","children","onAnalyzeClient","fileName","_jsxFileName","lineNumber","columnNumber","onViewRecommendations","onNewAnalysis","onBackToResults","_c","$RefreshReg$"],"sources":["C:/Users/Alex Murphy/Downloads/USB-Backup/Grant-AI/frontend/src/components/Dashboard/Matching/Matching.js"],"sourcesContent":["// frontend/src/components/Dashboard/Matching/Matching.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport MatchResults from './MatchResults';\r\nimport ClientProfile from './ClientProfile';\r\nimport GrantRecommendations from './GrantRecommendations';\r\nimport './Matching.css';\r\n\r\nconst Matching = () => {\r\n  const [view, setView] = useState('analyze'); // 'analyze', 'results', 'recommendations'\r\n  const [clients, setClients] = useState([]);\r\n  const [sources, setSources] = useState([]);\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [matches, setMatches] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [analysis, setAnalysis] = useState(null);\r\n\r\n  // Mock data - replace with actual API calls\r\n  useEffect(() => {\r\n    // Mock clients data\r\n    const mockClients = [\r\n      {\r\n        id: '1',\r\n        name: 'Tech4Kids Foundation',\r\n        type: 'nonprofit',\r\n        category: 'Education',\r\n        mission: 'Providing STEM education to underprivileged youth',\r\n        budget: 500000,\r\n        location: 'National',\r\n        targetPopulation: ['Youth', 'Low-income households', 'BIPOC communities'],\r\n        focusAreas: ['STEM Education', 'Youth Development', 'Technology Access'],\r\n        previousGrants: ['NSF Education Grant - $250,000', 'Google.org Tech Initiative - $150,000'],\r\n        eligibility: '501(c)(3) nonprofit, 3+ years of operation',\r\n        contact: {\r\n          name: 'Sarah Johnson',\r\n          email: 'sarah@tech4kids.org',\r\n          phone: '(555) 123-4567'\r\n        }\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Green Earth Alliance',\r\n        type: 'nonprofit',\r\n        category: 'Environment',\r\n        mission: 'Promoting environmental conservation and sustainable practices',\r\n        budget: 750000,\r\n        location: 'Regional',\r\n        targetPopulation: ['General Public', 'Rural populations', 'Indigenous communities'],\r\n        focusAreas: ['Environmental Conservation', 'Climate Change', 'Sustainable Agriculture'],\r\n        previousGrants: ['EPA Conservation Grant - $500,000', 'Ford Foundation - $200,000'],\r\n        eligibility: '501(c)(3) nonprofit, environmental focus',\r\n        contact: {\r\n          name: 'Michael Chen',\r\n          email: 'michael@greenearth.org',\r\n          phone: '(555) 234-5678'\r\n        }\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Community Health Alliance',\r\n        type: 'nonprofit',\r\n        category: 'Healthcare',\r\n        mission: 'Improving healthcare access in underserved communities',\r\n        budget: 1200000,\r\n        location: 'Local',\r\n        targetPopulation: ['Low-income households', 'Seniors', 'People with disabilities'],\r\n        focusAreas: ['Healthcare Access', 'Preventive Care', 'Mental Health'],\r\n        previousGrants: ['Robert Wood Johnson Foundation - $750,000', 'State Health Dept - $300,000'],\r\n        eligibility: '501(c)(3) nonprofit, healthcare provider',\r\n        contact: {\r\n          name: 'Dr. Maria Rodriguez',\r\n          email: 'maria@healthalliance.org',\r\n          phone: '(555) 345-6789'\r\n        }\r\n      },\r\n      {\r\n        id: '4',\r\n        name: 'Arts for All Initiative',\r\n        type: 'nonprofit',\r\n        category: 'Arts & Culture',\r\n        mission: 'Making arts education accessible to all communities',\r\n        budget: 300000,\r\n        location: 'Statewide',\r\n        targetPopulation: ['Youth', 'Seniors', 'People with disabilities'],\r\n        focusAreas: ['Arts Education', 'Cultural Programs', 'Community Arts'],\r\n        previousGrants: ['NEA Arts Grant - $100,000', 'Local Arts Council - $50,000'],\r\n        eligibility: '501(c)(3) nonprofit, arts organization',\r\n        contact: {\r\n          name: 'Emily Watson',\r\n          email: 'emily@artsforall.org',\r\n          phone: '(555) 456-7890'\r\n        }\r\n      }\r\n    ];\r\n\r\n    // Mock sources data (simplified from Sources.js)\r\n    const mockSources = [\r\n      {\r\n        id: '1',\r\n        name: 'National Science Foundation',\r\n        type: 'government',\r\n        category: 'STEM Education',\r\n        grants: [\r\n          {\r\n            id: 'nsf-1',\r\n            title: 'STEM Education Research Grants',\r\n            amount: '$500,000 - $1,500,000',\r\n            deadline: '2024-03-15',\r\n            category: 'Research',\r\n            status: 'active',\r\n            eligibility: 'Universities, Research Institutions, Non-profit STEM Organizations',\r\n            focusAreas: ['STEM Education', 'Research', 'Technology']\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Ford Foundation',\r\n        type: 'private_foundation',\r\n        category: 'Social Justice',\r\n        grants: [\r\n          {\r\n            id: 'ford-1',\r\n            title: 'Racial Justice Initiative',\r\n            amount: '$250,000 - $1,000,000',\r\n            deadline: '2024-06-30',\r\n            category: 'Social Justice',\r\n            status: 'active',\r\n            eligibility: 'Nonprofits, Community Organizations, Advocacy Groups',\r\n            focusAreas: ['Social Justice', 'Equity', 'Community Development']\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Department of Energy',\r\n        type: 'government',\r\n        category: 'Clean Energy',\r\n        grants: [\r\n          {\r\n            id: 'doe-1',\r\n            title: 'Solar Energy Research Program',\r\n            amount: '$1,000,000 - $5,000,000',\r\n            deadline: '2024-04-20',\r\n            category: 'Research',\r\n            status: 'active',\r\n            eligibility: 'Research Institutions, Energy Companies, Universities',\r\n            focusAreas: ['Renewable Energy', 'Climate Change', 'Innovation']\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n\r\n    setClients(mockClients);\r\n    setSources(mockSources);\r\n  }, []);\r\n\r\n  const analyzeClientMatches = (client) => {\r\n    setLoading(true);\r\n    setSelectedClient(client);\r\n\r\n    // Simulate AI analysis with timeout\r\n    setTimeout(() => {\r\n      const analysisResults = performAIAnalysis(client, sources);\r\n      setAnalysis(analysisResults);\r\n      setMatches(analysisResults.matches);\r\n      setView('results');\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const performAIAnalysis = (client, allSources) => {\r\n    let matches = [];\r\n    let analysis = {\r\n      clientStrengths: [],\r\n      improvementAreas: [],\r\n      matchFactors: [],\r\n      timeline: []\r\n    };\r\n\r\n    // Analyze each source and grant for matches\r\n    allSources.forEach(source => {\r\n      source.grants.forEach(grant => {\r\n        const matchScore = calculateMatchScore(client, grant, source);\r\n        \r\n        if (matchScore >= 60) { // Only include matches with 60%+ score\r\n          matches.push({\r\n            grant,\r\n            source,\r\n            matchScore,\r\n            matchReasons: getMatchReasons(client, grant, source),\r\n            fitAnalysis: analyzeFit(client, grant, source),\r\n            timeline: generateTimeline(grant.deadline),\r\n            actionSteps: generateActionSteps(client, grant)\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    // Sort matches by score (highest first)\r\n    matches.sort((a, b) => b.matchScore - a.matchScore);\r\n\r\n    // Generate client analysis\r\n    analysis.clientStrengths = analyzeClientStrengths(client, matches);\r\n    analysis.improvementAreas = analyzeImprovementAreas(client, matches);\r\n    analysis.matchFactors = analyzeMatchFactors(client, matches);\r\n    analysis.timeline = generateOverallTimeline(matches);\r\n\r\n    return { matches, analysis };\r\n  };\r\n\r\n  const calculateMatchScore = (client, grant, source) => {\r\n    let score = 0;\r\n    let factors = [];\r\n\r\n    // Category match (30%)\r\n    if (client.category === source.category) {\r\n      score += 30;\r\n      factors.push('Perfect category alignment');\r\n    } else if (hasOverlap(client.focusAreas, grant.focusAreas)) {\r\n      score += 20;\r\n      factors.push('Focus area overlap');\r\n    }\r\n\r\n    // Budget alignment (25%)\r\n    const grantAmount = extractMaxAmount(grant.amount);\r\n    if (grantAmount && client.budget) {\r\n      const budgetRatio = Math.min(client.budget / grantAmount, 1);\r\n      if (budgetRatio >= 0.8) {\r\n        score += 25;\r\n        factors.push('Ideal budget alignment');\r\n      } else if (budgetRatio >= 0.5) {\r\n        score += 15;\r\n        factors.push('Reasonable budget range');\r\n      }\r\n    }\r\n\r\n    // Geographic alignment (20%)\r\n    if (client.location === 'National' || \r\n        (client.location === 'Regional' && source.type === 'private_foundation') ||\r\n        (client.location === 'Local' && source.type === 'community')) {\r\n      score += 20;\r\n      factors.push('Geographic compatibility');\r\n    }\r\n\r\n    // Target population alignment (15%)\r\n    if (hasOverlap(client.targetPopulation, extractTargetPopulation(grant))) {\r\n      score += 15;\r\n      factors.push('Target population match');\r\n    }\r\n\r\n    // Previous experience bonus (10%)\r\n    if (hasRelevantExperience(client, source.category)) {\r\n      score += 10;\r\n      factors.push('Relevant previous experience');\r\n    }\r\n\r\n    return Math.min(score, 100);\r\n  };\r\n\r\n  // Helper functions for analysis\r\n  const hasOverlap = (arr1, arr2) => {\r\n    return arr1.some(item => arr2.includes(item));\r\n  };\r\n\r\n  const extractMaxAmount = (amountString) => {\r\n    const match = amountString.match(/\\$?([\\d,]+)/g);\r\n    if (match) {\r\n      const amounts = match.map(amt => parseInt(amt.replace(/[$,]/g, '')));\r\n      return Math.max(...amounts);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const extractTargetPopulation = (grant) => {\r\n    // This would be more sophisticated in a real implementation\r\n    const populationKeywords = {\r\n      'STEM Education': ['Youth', 'Students'],\r\n      'Social Justice': ['BIPOC communities', 'Marginalized groups'],\r\n      'Environment': ['General Public', 'Communities'],\r\n      'Healthcare': ['Low-income households', 'Seniors']\r\n    };\r\n    return populationKeywords[grant.category] || ['General Public'];\r\n  };\r\n\r\n  const hasRelevantExperience = (client, category) => {\r\n    return client.previousGrants.some(grant => \r\n      grant.toLowerCase().includes(category.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const getMatchReasons = (client, grant, source) => {\r\n    const reasons = [];\r\n    \r\n    if (client.category === source.category) {\r\n      reasons.push(`Your ${client.category} focus aligns perfectly with ${source.name}'s mission`);\r\n    }\r\n    \r\n    if (hasOverlap(client.focusAreas, grant.focusAreas)) {\r\n      reasons.push(`Shared focus on ${client.focusAreas.find(f => grant.focusAreas.includes(f))}`);\r\n    }\r\n    \r\n    if (hasOverlap(client.targetPopulation, extractTargetPopulation(grant))) {\r\n      reasons.push(`Target population alignment`);\r\n    }\r\n    \r\n    return reasons;\r\n  };\r\n\r\n  const analyzeFit = (client, grant, source) => {\r\n    const fit = {\r\n      strengths: [],\r\n      considerations: []\r\n    };\r\n\r\n    // Strengths\r\n    if (client.category === source.category) {\r\n      fit.strengths.push('Perfect mission alignment');\r\n    }\r\n    if (client.budget >= extractMaxAmount(grant.amount) * 0.5) {\r\n      fit.strengths.push('Strong financial capacity');\r\n    }\r\n    if (hasRelevantExperience(client, source.category)) {\r\n      fit.strengths.push('Proven track record in this area');\r\n    }\r\n\r\n    // Considerations\r\n    if (client.budget < extractMaxAmount(grant.amount) * 0.3) {\r\n      fit.considerations.push('May need additional funding partners');\r\n    }\r\n    if (grant.deadline && daysUntilDeadline(grant.deadline) < 60) {\r\n      fit.considerations.push('Tight application timeline');\r\n    }\r\n\r\n    return fit;\r\n  };\r\n\r\n  const daysUntilDeadline = (deadline) => {\r\n    const today = new Date();\r\n    const deadlineDate = new Date(deadline);\r\n    return Math.ceil((deadlineDate - today) / (1000 * 60 * 60 * 24));\r\n  };\r\n\r\n  const generateTimeline = (deadline) => {\r\n    const days = daysUntilDeadline(deadline);\r\n    return [\r\n      { step: 'Initial Research', due: '1 week', status: 'pending' },\r\n      { step: 'Proposal Draft', due: `${Math.max(7, days - 45)} days`, status: 'pending' },\r\n      { step: 'Budget Preparation', due: `${Math.max(7, days - 30)} days`, status: 'pending' },\r\n      { step: 'Final Review', due: `${Math.max(3, days - 14)} days`, status: 'pending' },\r\n      { step: 'Submission', due: `${days} days`, status: 'pending' }\r\n    ];\r\n  };\r\n\r\n  const generateActionSteps = (client, grant) => {\r\n    const steps = [\r\n      'Review full RFP requirements',\r\n      'Gather required documentation',\r\n      'Schedule planning meeting with team'\r\n    ];\r\n\r\n    if (!hasRelevantExperience(client, grant.category)) {\r\n      steps.push('Develop case studies demonstrating relevant capacity');\r\n    }\r\n\r\n    if (daysUntilDeadline(grant.deadline) < 90) {\r\n      steps.push('Expedite proposal development process');\r\n    }\r\n\r\n    return steps;\r\n  };\r\n\r\n  const analyzeClientStrengths = (client, matches) => {\r\n    const strengths = [];\r\n    \r\n    if (matches.some(m => m.matchScore >= 90)) {\r\n      strengths.push('Excellent alignment with multiple high-value opportunities');\r\n    }\r\n    \r\n    if (client.previousGrants.length >= 2) {\r\n      strengths.push('Strong track record of successful grant acquisition');\r\n    }\r\n    \r\n    if (client.budget >= 500000) {\r\n      strengths.push('Substantial organizational capacity for large grants');\r\n    }\r\n    \r\n    return strengths;\r\n  };\r\n\r\n  const analyzeImprovementAreas = (client, matches) => {\r\n    const areas = [];\r\n    \r\n    if (!matches.some(m => m.matchScore >= 80)) {\r\n      areas.push('Consider expanding program areas to access more funding opportunities');\r\n    }\r\n    \r\n    if (client.previousGrants.length === 0) {\r\n      areas.push('Build grant writing capacity and track record');\r\n    }\r\n    \r\n    return areas;\r\n  };\r\n\r\n  const analyzeMatchFactors = (client, matches) => {\r\n    const factors = [];\r\n    \r\n    const categoryMatches = matches.filter(m => client.category === m.source.category);\r\n    if (categoryMatches.length > 0) {\r\n      factors.push(`Strong presence in ${client.category} funding space`);\r\n    }\r\n    \r\n    const highBudgetMatches = matches.filter(m => \r\n      client.budget >= extractMaxAmount(m.grant.amount) * 0.7\r\n    );\r\n    if (highBudgetMatches.length > 0) {\r\n      factors.push('Well-positioned for major grants');\r\n    }\r\n    \r\n    return factors;\r\n  };\r\n\r\n  const generateOverallTimeline = (matches) => {\r\n    const deadlines = matches\r\n      .map(m => ({ grant: m.grant.title, deadline: m.grant.deadline }))\r\n      .sort((a, b) => new Date(a.deadline) - new Date(b.deadline))\r\n      .slice(0, 3);\r\n    \r\n    return deadlines;\r\n  };\r\n\r\n  const handleViewRecommendations = () => {\r\n    setView('recommendations');\r\n  };\r\n\r\n  const handleNewAnalysis = () => {\r\n    setView('analyze');\r\n    setSelectedClient(null);\r\n    setMatches([]);\r\n    setAnalysis(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"matching-container\">\r\n      {view === 'analyze' && (\r\n        <ClientProfile\r\n          clients={clients}\r\n          onAnalyzeClient={analyzeClientMatches}\r\n          loading={loading}\r\n        />\r\n      )}\r\n\r\n      {view === 'results' && (\r\n        <MatchResults\r\n          client={selectedClient}\r\n          matches={matches}\r\n          analysis={analysis}\r\n          onViewRecommendations={handleViewRecommendations}\r\n          onNewAnalysis={handleNewAnalysis}\r\n          loading={loading}\r\n        />\r\n      )}\r\n\r\n      {view === 'recommendations' && (\r\n        <GrantRecommendations\r\n          client={selectedClient}\r\n          matches={matches}\r\n          analysis={analysis}\r\n          onBackToResults={() => setView('results')}\r\n          onNewAnalysis={handleNewAnalysis}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Matching;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}