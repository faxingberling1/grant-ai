{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Murphy\\\\Downloads\\\\USB-Backup\\\\Grant-AI\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\AIWriting\\\\WritingAssistant.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Dashboard/AIWriting/WritingAssistant.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WritingAssistant = ({\n  clients,\n  grants,\n  selectedClient,\n  selectedGrant,\n  onSelectClient,\n  onSelectGrant,\n  onGenerateContent,\n  onImproveContent,\n  onAnalyzeContent,\n  loading,\n  apiStatus\n}) => {\n  _s();\n  var _toneOptions$find, _lengthOptions$find;\n  const [activeSection, setActiveSection] = useState('needs_statement');\n  const [prompt, setPrompt] = useState('');\n  const [generatedContent, setGeneratedContent] = useState('');\n  const [customInstructions, setCustomInstructions] = useState('');\n  const [tone, setTone] = useState('professional');\n  const [length, setLength] = useState('medium');\n  const [history, setHistory] = useState([]);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const grantSections = [{\n    id: 'needs_statement',\n    name: 'Needs Statement',\n    description: 'Describe the problem and community needs',\n    icon: 'fas fa-exclamation-circle'\n  }, {\n    id: 'objectives',\n    name: 'Goals & Objectives',\n    description: 'Define program goals and measurable objectives',\n    icon: 'fas fa-bullseye'\n  }, {\n    id: 'methodology',\n    name: 'Methodology',\n    description: 'Explain program activities and implementation plan',\n    icon: 'fas fa-cogs'\n  }, {\n    id: 'evaluation',\n    name: 'Evaluation Plan',\n    description: 'Describe how success will be measured',\n    icon: 'fas fa-chart-line'\n  }, {\n    id: 'budget',\n    name: 'Budget Narrative',\n    description: 'Justify budget items and costs',\n    icon: 'fas fa-dollar-sign'\n  }, {\n    id: 'organization',\n    name: 'Organization Background',\n    description: 'Showcase your organization\\'s capacity',\n    icon: 'fas fa-building'\n  }];\n  const toneOptions = [{\n    value: 'professional',\n    label: 'Professional',\n    description: 'Formal and authoritative'\n  }, {\n    value: 'persuasive',\n    label: 'Persuasive',\n    description: 'Compelling and convincing'\n  }, {\n    value: 'compassionate',\n    label: 'Compassionate',\n    description: 'Empathetic and caring'\n  }, {\n    value: 'data_driven',\n    label: 'Data-Driven',\n    description: 'Fact-based and statistical'\n  }, {\n    value: 'storytelling',\n    label: 'Storytelling',\n    description: 'Narrative and engaging'\n  }];\n  const lengthOptions = [{\n    value: 'brief',\n    label: 'Brief',\n    description: '1-2 paragraphs'\n  }, {\n    value: 'medium',\n    label: 'Medium',\n    description: '3-4 paragraphs'\n  }, {\n    value: 'detailed',\n    label: 'Detailed',\n    description: '5+ paragraphs'\n  }];\n  const improvementTypes = [{\n    value: 'clarity',\n    label: 'Improve Clarity',\n    description: 'Make content clearer and more concise'\n  }, {\n    value: 'persuasiveness',\n    label: 'Enhance Persuasiveness',\n    description: 'Make arguments more compelling'\n  }, {\n    value: 'professionalism',\n    label: 'Increase Professionalism',\n    description: 'Make tone more formal and authoritative'\n  }, {\n    value: 'impact',\n    label: 'Strengthen Impact',\n    description: 'Emphasize outcomes and benefits'\n  }, {\n    value: 'structure',\n    label: 'Improve Structure',\n    description: 'Enhance organization and flow'\n  }];\n  const analysisTypes = [{\n    value: 'readability',\n    label: 'Readability Score',\n    description: 'Assess reading level and clarity'\n  }, {\n    value: 'persuasion',\n    label: 'Persuasion Analysis',\n    description: 'Evaluate compelling arguments'\n  }, {\n    value: 'alignment',\n    label: 'Grant Alignment',\n    description: 'Check alignment with funder priorities'\n  }, {\n    value: 'completeness',\n    label: 'Completeness Check',\n    description: 'Identify missing information'\n  }];\n  useEffect(() => {\n    // Load default prompt for selected section\n    const section = grantSections.find(s => s.id === activeSection);\n    if (section) {\n      setPrompt(getDefaultPrompt(section.id));\n    }\n  }, [activeSection]);\n  const getDefaultPrompt = sectionId => {\n    const prompts = {\n      needs_statement: `Describe the community problem and needs that this grant will address. Include relevant statistics and data to demonstrate the urgency and scope of the issue.`,\n      objectives: `Create specific, measurable, achievable, relevant, and time-bound (SMART) objectives for this program. Focus on outcomes and impact.`,\n      methodology: `Outline the program activities, implementation steps, timeline, and resources needed. Explain why this approach will be effective.`,\n      evaluation: `Describe how program success will be measured, including evaluation methods, metrics, data collection, and reporting.`,\n      budget: `Provide a narrative justification for the budget items, explaining how each cost supports program objectives and represents efficient use of funds.`,\n      organization: `Highlight the organization's experience, capacity, and track record in relevant areas to demonstrate capability to implement the proposed program.`\n    };\n    return prompts[sectionId] || 'Write compelling content for this grant section.';\n  };\n  const handleGenerate = async () => {\n    if (!selectedClient || !selectedGrant) {\n      alert('Please select a client and grant first.');\n      return;\n    }\n    if (!prompt.trim()) {\n      alert('Please enter a prompt or instructions.');\n      return;\n    }\n    setIsGenerating(true);\n    try {\n      const context = {\n        customInstructions,\n        tone,\n        length,\n        section: activeSection\n      };\n      const content = await onGenerateContent(prompt, context, activeSection);\n      setGeneratedContent(content);\n\n      // Add to history\n      setHistory(prev => [{\n        id: Date.now(),\n        section: activeSection,\n        prompt: prompt,\n        content: content,\n        timestamp: new Date().toLocaleString(),\n        client: selectedClient.name,\n        grant: selectedGrant.title\n      }, ...prev.slice(0, 9)]); // Keep last 10 items\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const handleImprove = async improvementType => {\n    if (!generatedContent.trim()) {\n      alert('Please generate some content first.');\n      return;\n    }\n    setIsGenerating(true);\n    try {\n      const improvedContent = await onImproveContent(generatedContent, improvementType);\n      setGeneratedContent(improvedContent);\n\n      // Add to history\n      setHistory(prev => [{\n        id: Date.now(),\n        section: 'improvement',\n        prompt: `Improve: ${improvementType}`,\n        content: improvedContent,\n        timestamp: new Date().toLocaleString(),\n        client: selectedClient.name,\n        grant: selectedGrant.title\n      }, ...prev.slice(0, 9)]);\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const handleAnalyze = async analysisType => {\n    if (!generatedContent.trim()) {\n      alert('Please generate some content first.');\n      return;\n    }\n    setIsGenerating(true);\n    try {\n      const analysis = await onAnalyzeContent(generatedContent, analysisType);\n\n      // Show analysis results\n      alert(`Analysis Results (${analysisType}):\\n\\n${analysis}`);\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const handleUseTemplate = template => {\n    setPrompt(template.prompt);\n    setCustomInstructions(template.instructions || '');\n  };\n  const handleSaveContent = () => {\n    if (!generatedContent.trim()) {\n      alert('No content to save.');\n      return;\n    }\n\n    // Here you would typically save to your database\n    console.log('Saving content:', {\n      section: activeSection,\n      content: generatedContent,\n      client: selectedClient === null || selectedClient === void 0 ? void 0 : selectedClient.id,\n      grant: selectedGrant === null || selectedGrant === void 0 ? void 0 : selectedGrant.id\n    });\n    alert('Content saved successfully!');\n  };\n  const handleCopyContent = () => {\n    if (!generatedContent.trim()) {\n      alert('No content to copy.');\n      return;\n    }\n    navigator.clipboard.writeText(generatedContent);\n    alert('Content copied to clipboard!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"writing-assistant\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assistant-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Project Setup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: (selectedClient === null || selectedClient === void 0 ? void 0 : selectedClient.id) || '',\n              onChange: e => onSelectClient(clients.find(c => c.id === e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose a client...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), clients.map(client => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: client.id,\n                children: client.name\n              }, client.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Grant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: (selectedGrant === null || selectedGrant === void 0 ? void 0 : selectedGrant.id) || '',\n              onChange: e => onSelectGrant(grants.find(g => g.id === e.target.value)),\n              disabled: !selectedClient,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose a grant...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), grants.filter(grant => grant.clientId === (selectedClient === null || selectedClient === void 0 ? void 0 : selectedClient.id)).map(grant => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: grant.id,\n                children: grant.title\n              }, grant.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Grant Section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-buttons\",\n            children: grantSections.map(section => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `section-button ${activeSection === section.id ? 'active' : ''}`,\n              onClick: () => setActiveSection(section.id),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: section.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: section.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this)]\n            }, section.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Writing Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: tone,\n              onChange: e => setTone(e.target.value),\n              children: toneOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: (_toneOptions$find = toneOptions.find(t => t.value === tone)) === null || _toneOptions$find === void 0 ? void 0 : _toneOptions$find.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Length\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: length,\n              onChange: e => setLength(e.target.value),\n              children: lengthOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: (_lengthOptions$find = lengthOptions.find(l => l.value === length)) === null || _lengthOptions$find === void 0 ? void 0 : _lengthOptions$find.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Custom Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: customInstructions,\n              onChange: e => setCustomInstructions(e.target.value),\n              placeholder: \"Any specific instructions or requirements...\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Quick Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quick-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline\",\n              onClick: () => setPrompt(getDefaultPrompt(activeSection)),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-magic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this), \"Default Prompt\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline\",\n              onClick: handleSaveContent,\n              disabled: !generatedContent.trim(),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), \"Save Content\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"AI Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: prompt,\n              onChange: e => setPrompt(e.target.value),\n              placeholder: \"Describe what you want the AI to write... Be specific about the content, key points, and any requirements.\",\n              rows: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prompt-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary generate-btn\",\n                onClick: handleGenerate,\n                disabled: !prompt.trim() || isGenerating || !selectedClient || !selectedGrant || apiStatus !== 'connected',\n                children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-spinner fa-spin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 23\n                  }, this), \"Generating...\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-robot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 23\n                  }, this), \"Generate Content\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"prompt-tips\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-lightbulb\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 21\n                  }, this), \"Tip: Be specific about data, outcomes, and key messages you want to include.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Generated Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline\",\n                onClick: handleCopyContent,\n                disabled: !generatedContent.trim(),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-copy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 19\n                }, this), \"Copy\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline\",\n                onClick: () => setGeneratedContent(''),\n                disabled: !generatedContent.trim(),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 19\n                }, this), \"Clear\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-output\",\n            children: generatedContent ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"generated-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content-text\",\n                children: generatedContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"improvement-tools\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Enhance Content\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"improvement-buttons\",\n                  children: improvementTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-outline improvement-btn\",\n                    onClick: () => handleImprove(type.value),\n                    disabled: isGenerating,\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-wand-magic-sparkles\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 27\n                    }, this), type.label]\n                  }, type.value, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"analysis-tools\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Analyze Content\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"analysis-buttons\",\n                  children: analysisTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-outline analysis-btn\",\n                    onClick: () => handleAnalyze(type.value),\n                    disabled: isGenerating,\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-chart-bar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 27\n                    }, this), type.label]\n                  }, type.value, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-robot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"No Content Generated Yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Enter your instructions above and click \\\"Generate Content\\\" to get started.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recent Generations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-list\",\n            children: history.length > 0 ? history.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"history-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"history-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"history-section\",\n                  children: item.section\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"history-time\",\n                  children: item.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"history-preview\",\n                children: [item.content.substring(0, 100), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"history-actions\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-link\",\n                  onClick: () => {\n                    setGeneratedContent(item.content);\n                    setActiveSection(item.section);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-redo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 25\n                  }, this), \"Use\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-history\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-history\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No generation history yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"templates-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Quick Templates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"template-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline template-btn\",\n              onClick: () => handleUseTemplate({\n                prompt: 'Write a compelling needs statement that highlights the urgency of the problem and demonstrates clear community need using relevant statistics and local data.',\n                instructions: 'Focus on specific demographics and include recent data'\n              }),\n              children: \"Needs Statement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline template-btn\",\n              onClick: () => handleUseTemplate({\n                prompt: 'Create SMART objectives that are specific, measurable, achievable, relevant, and time-bound. Include both process and outcome objectives.',\n                instructions: 'Ensure objectives align with funder priorities'\n              }),\n              children: \"SMART Objectives\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline template-btn\",\n              onClick: () => handleUseTemplate({\n                prompt: 'Develop a detailed methodology section that explains program activities, timeline, staffing, and resources. Justify why this approach will be effective.',\n                instructions: 'Include specific activities and implementation steps'\n              }),\n              children: \"Methodology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(WritingAssistant, \"d7micxxkvGNy1s4eqLLjdhKR8ls=\");\n_c = WritingAssistant;\nexport default WritingAssistant;\nvar _c;\n$RefreshReg$(_c, \"WritingAssistant\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WritingAssistant","clients","grants","selectedClient","selectedGrant","onSelectClient","onSelectGrant","onGenerateContent","onImproveContent","onAnalyzeContent","loading","apiStatus","_s","_toneOptions$find","_lengthOptions$find","activeSection","setActiveSection","prompt","setPrompt","generatedContent","setGeneratedContent","customInstructions","setCustomInstructions","tone","setTone","length","setLength","history","setHistory","isGenerating","setIsGenerating","grantSections","id","name","description","icon","toneOptions","value","label","lengthOptions","improvementTypes","analysisTypes","section","find","s","getDefaultPrompt","sectionId","prompts","needs_statement","objectives","methodology","evaluation","budget","organization","handleGenerate","alert","trim","context","content","prev","Date","now","timestamp","toLocaleString","client","grant","title","slice","error","message","handleImprove","improvementType","improvedContent","handleAnalyze","analysisType","analysis","handleUseTemplate","template","instructions","handleSaveContent","console","log","handleCopyContent","navigator","clipboard","writeText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","c","target","map","g","disabled","filter","clientId","onClick","option","t","l","placeholder","rows","type","item","substring","_c","$RefreshReg$"],"sources":["C:/Users/Alex Murphy/Downloads/USB-Backup/Grant-AI/frontend/src/components/Dashboard/AIWriting/WritingAssistant.js"],"sourcesContent":["// frontend/src/components/Dashboard/AIWriting/WritingAssistant.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst WritingAssistant = ({\r\n  clients,\r\n  grants,\r\n  selectedClient,\r\n  selectedGrant,\r\n  onSelectClient,\r\n  onSelectGrant,\r\n  onGenerateContent,\r\n  onImproveContent,\r\n  onAnalyzeContent,\r\n  loading,\r\n  apiStatus\r\n}) => {\r\n  const [activeSection, setActiveSection] = useState('needs_statement');\r\n  const [prompt, setPrompt] = useState('');\r\n  const [generatedContent, setGeneratedContent] = useState('');\r\n  const [customInstructions, setCustomInstructions] = useState('');\r\n  const [tone, setTone] = useState('professional');\r\n  const [length, setLength] = useState('medium');\r\n  const [history, setHistory] = useState([]);\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n\r\n  const grantSections = [\r\n    {\r\n      id: 'needs_statement',\r\n      name: 'Needs Statement',\r\n      description: 'Describe the problem and community needs',\r\n      icon: 'fas fa-exclamation-circle'\r\n    },\r\n    {\r\n      id: 'objectives',\r\n      name: 'Goals & Objectives',\r\n      description: 'Define program goals and measurable objectives',\r\n      icon: 'fas fa-bullseye'\r\n    },\r\n    {\r\n      id: 'methodology',\r\n      name: 'Methodology',\r\n      description: 'Explain program activities and implementation plan',\r\n      icon: 'fas fa-cogs'\r\n    },\r\n    {\r\n      id: 'evaluation',\r\n      name: 'Evaluation Plan',\r\n      description: 'Describe how success will be measured',\r\n      icon: 'fas fa-chart-line'\r\n    },\r\n    {\r\n      id: 'budget',\r\n      name: 'Budget Narrative',\r\n      description: 'Justify budget items and costs',\r\n      icon: 'fas fa-dollar-sign'\r\n    },\r\n    {\r\n      id: 'organization',\r\n      name: 'Organization Background',\r\n      description: 'Showcase your organization\\'s capacity',\r\n      icon: 'fas fa-building'\r\n    }\r\n  ];\r\n\r\n  const toneOptions = [\r\n    { value: 'professional', label: 'Professional', description: 'Formal and authoritative' },\r\n    { value: 'persuasive', label: 'Persuasive', description: 'Compelling and convincing' },\r\n    { value: 'compassionate', label: 'Compassionate', description: 'Empathetic and caring' },\r\n    { value: 'data_driven', label: 'Data-Driven', description: 'Fact-based and statistical' },\r\n    { value: 'storytelling', label: 'Storytelling', description: 'Narrative and engaging' }\r\n  ];\r\n\r\n  const lengthOptions = [\r\n    { value: 'brief', label: 'Brief', description: '1-2 paragraphs' },\r\n    { value: 'medium', label: 'Medium', description: '3-4 paragraphs' },\r\n    { value: 'detailed', label: 'Detailed', description: '5+ paragraphs' }\r\n  ];\r\n\r\n  const improvementTypes = [\r\n    { value: 'clarity', label: 'Improve Clarity', description: 'Make content clearer and more concise' },\r\n    { value: 'persuasiveness', label: 'Enhance Persuasiveness', description: 'Make arguments more compelling' },\r\n    { value: 'professionalism', label: 'Increase Professionalism', description: 'Make tone more formal and authoritative' },\r\n    { value: 'impact', label: 'Strengthen Impact', description: 'Emphasize outcomes and benefits' },\r\n    { value: 'structure', label: 'Improve Structure', description: 'Enhance organization and flow' }\r\n  ];\r\n\r\n  const analysisTypes = [\r\n    { value: 'readability', label: 'Readability Score', description: 'Assess reading level and clarity' },\r\n    { value: 'persuasion', label: 'Persuasion Analysis', description: 'Evaluate compelling arguments' },\r\n    { value: 'alignment', label: 'Grant Alignment', description: 'Check alignment with funder priorities' },\r\n    { value: 'completeness', label: 'Completeness Check', description: 'Identify missing information' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Load default prompt for selected section\r\n    const section = grantSections.find(s => s.id === activeSection);\r\n    if (section) {\r\n      setPrompt(getDefaultPrompt(section.id));\r\n    }\r\n  }, [activeSection]);\r\n\r\n  const getDefaultPrompt = (sectionId) => {\r\n    const prompts = {\r\n      needs_statement: `Describe the community problem and needs that this grant will address. Include relevant statistics and data to demonstrate the urgency and scope of the issue.`,\r\n      objectives: `Create specific, measurable, achievable, relevant, and time-bound (SMART) objectives for this program. Focus on outcomes and impact.`,\r\n      methodology: `Outline the program activities, implementation steps, timeline, and resources needed. Explain why this approach will be effective.`,\r\n      evaluation: `Describe how program success will be measured, including evaluation methods, metrics, data collection, and reporting.`,\r\n      budget: `Provide a narrative justification for the budget items, explaining how each cost supports program objectives and represents efficient use of funds.`,\r\n      organization: `Highlight the organization's experience, capacity, and track record in relevant areas to demonstrate capability to implement the proposed program.`\r\n    };\r\n    return prompts[sectionId] || 'Write compelling content for this grant section.';\r\n  };\r\n\r\n  const handleGenerate = async () => {\r\n    if (!selectedClient || !selectedGrant) {\r\n      alert('Please select a client and grant first.');\r\n      return;\r\n    }\r\n\r\n    if (!prompt.trim()) {\r\n      alert('Please enter a prompt or instructions.');\r\n      return;\r\n    }\r\n\r\n    setIsGenerating(true);\r\n\r\n    try {\r\n      const context = {\r\n        customInstructions,\r\n        tone,\r\n        length,\r\n        section: activeSection\r\n      };\r\n\r\n      const content = await onGenerateContent(prompt, context, activeSection);\r\n      setGeneratedContent(content);\r\n\r\n      // Add to history\r\n      setHistory(prev => [{\r\n        id: Date.now(),\r\n        section: activeSection,\r\n        prompt: prompt,\r\n        content: content,\r\n        timestamp: new Date().toLocaleString(),\r\n        client: selectedClient.name,\r\n        grant: selectedGrant.title\r\n      }, ...prev.slice(0, 9)]); // Keep last 10 items\r\n\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  const handleImprove = async (improvementType) => {\r\n    if (!generatedContent.trim()) {\r\n      alert('Please generate some content first.');\r\n      return;\r\n    }\r\n\r\n    setIsGenerating(true);\r\n\r\n    try {\r\n      const improvedContent = await onImproveContent(generatedContent, improvementType);\r\n      setGeneratedContent(improvedContent);\r\n\r\n      // Add to history\r\n      setHistory(prev => [{\r\n        id: Date.now(),\r\n        section: 'improvement',\r\n        prompt: `Improve: ${improvementType}`,\r\n        content: improvedContent,\r\n        timestamp: new Date().toLocaleString(),\r\n        client: selectedClient.name,\r\n        grant: selectedGrant.title\r\n      }, ...prev.slice(0, 9)]);\r\n\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  const handleAnalyze = async (analysisType) => {\r\n    if (!generatedContent.trim()) {\r\n      alert('Please generate some content first.');\r\n      return;\r\n    }\r\n\r\n    setIsGenerating(true);\r\n\r\n    try {\r\n      const analysis = await onAnalyzeContent(generatedContent, analysisType);\r\n      \r\n      // Show analysis results\r\n      alert(`Analysis Results (${analysisType}):\\n\\n${analysis}`);\r\n\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  const handleUseTemplate = (template) => {\r\n    setPrompt(template.prompt);\r\n    setCustomInstructions(template.instructions || '');\r\n  };\r\n\r\n  const handleSaveContent = () => {\r\n    if (!generatedContent.trim()) {\r\n      alert('No content to save.');\r\n      return;\r\n    }\r\n\r\n    // Here you would typically save to your database\r\n    console.log('Saving content:', {\r\n      section: activeSection,\r\n      content: generatedContent,\r\n      client: selectedClient?.id,\r\n      grant: selectedGrant?.id\r\n    });\r\n\r\n    alert('Content saved successfully!');\r\n  };\r\n\r\n  const handleCopyContent = () => {\r\n    if (!generatedContent.trim()) {\r\n      alert('No content to copy.');\r\n      return;\r\n    }\r\n\r\n    navigator.clipboard.writeText(generatedContent);\r\n    alert('Content copied to clipboard!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"writing-assistant\">\r\n      <div className=\"assistant-layout\">\r\n        {/* Left Sidebar - Controls */}\r\n        <div className=\"controls-sidebar\">\r\n          {/* Client & Grant Selection */}\r\n          <div className=\"control-section\">\r\n            <h3>Project Setup</h3>\r\n            \r\n            <div className=\"form-group\">\r\n              <label>Select Client</label>\r\n              <select \r\n                value={selectedClient?.id || ''} \r\n                onChange={(e) => onSelectClient(clients.find(c => c.id === e.target.value))}\r\n              >\r\n                <option value=\"\">Choose a client...</option>\r\n                {clients.map(client => (\r\n                  <option key={client.id} value={client.id}>\r\n                    {client.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Select Grant</label>\r\n              <select \r\n                value={selectedGrant?.id || ''} \r\n                onChange={(e) => onSelectGrant(grants.find(g => g.id === e.target.value))}\r\n                disabled={!selectedClient}\r\n              >\r\n                <option value=\"\">Choose a grant...</option>\r\n                {grants\r\n                  .filter(grant => grant.clientId === selectedClient?.id)\r\n                  .map(grant => (\r\n                    <option key={grant.id} value={grant.id}>\r\n                      {grant.title}\r\n                    </option>\r\n                  ))\r\n                }\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Section Selection */}\r\n          <div className=\"control-section\">\r\n            <h3>Grant Section</h3>\r\n            <div className=\"section-buttons\">\r\n              {grantSections.map(section => (\r\n                <button\r\n                  key={section.id}\r\n                  className={`section-button ${activeSection === section.id ? 'active' : ''}`}\r\n                  onClick={() => setActiveSection(section.id)}\r\n                >\r\n                  <i className={section.icon}></i>\r\n                  <span>{section.name}</span>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Writing Settings */}\r\n          <div className=\"control-section\">\r\n            <h3>Writing Settings</h3>\r\n            \r\n            <div className=\"form-group\">\r\n              <label>Tone</label>\r\n              <select value={tone} onChange={(e) => setTone(e.target.value)}>\r\n                {toneOptions.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <small>{toneOptions.find(t => t.value === tone)?.description}</small>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Length</label>\r\n              <select value={length} onChange={(e) => setLength(e.target.value)}>\r\n                {lengthOptions.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <small>{lengthOptions.find(l => l.value === length)?.description}</small>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Custom Instructions</label>\r\n              <textarea\r\n                value={customInstructions}\r\n                onChange={(e) => setCustomInstructions(e.target.value)}\r\n                placeholder=\"Any specific instructions or requirements...\"\r\n                rows=\"3\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Actions */}\r\n          <div className=\"control-section\">\r\n            <h3>Quick Actions</h3>\r\n            <div className=\"quick-actions\">\r\n              <button \r\n                className=\"btn btn-outline\"\r\n                onClick={() => setPrompt(getDefaultPrompt(activeSection))}\r\n              >\r\n                <i className=\"fas fa-magic\"></i>\r\n                Default Prompt\r\n              </button>\r\n              <button \r\n                className=\"btn btn-outline\"\r\n                onClick={handleSaveContent}\r\n                disabled={!generatedContent.trim()}\r\n              >\r\n                <i className=\"fas fa-save\"></i>\r\n                Save Content\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content Area */}\r\n        <div className=\"content-area\">\r\n          {/* Prompt Input */}\r\n          <div className=\"prompt-section\">\r\n            <h3>AI Instructions</h3>\r\n            <div className=\"prompt-input\">\r\n              <textarea\r\n                value={prompt}\r\n                onChange={(e) => setPrompt(e.target.value)}\r\n                placeholder=\"Describe what you want the AI to write... Be specific about the content, key points, and any requirements.\"\r\n                rows=\"6\"\r\n              />\r\n              <div className=\"prompt-actions\">\r\n                <button \r\n                  className=\"btn btn-primary generate-btn\"\r\n                  onClick={handleGenerate}\r\n                  disabled={!prompt.trim() || isGenerating || !selectedClient || !selectedGrant || apiStatus !== 'connected'}\r\n                >\r\n                  {isGenerating ? (\r\n                    <>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>\r\n                      Generating...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <i className=\"fas fa-robot\"></i>\r\n                      Generate Content\r\n                    </>\r\n                  )}\r\n                </button>\r\n                <div className=\"prompt-tips\">\r\n                  <small>\r\n                    <i className=\"fas fa-lightbulb\"></i>\r\n                    Tip: Be specific about data, outcomes, and key messages you want to include.\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Generated Content */}\r\n          <div className=\"content-section\">\r\n            <div className=\"content-header\">\r\n              <h3>Generated Content</h3>\r\n              <div className=\"content-actions\">\r\n                <button \r\n                  className=\"btn btn-outline\"\r\n                  onClick={handleCopyContent}\r\n                  disabled={!generatedContent.trim()}\r\n                >\r\n                  <i className=\"fas fa-copy\"></i>\r\n                  Copy\r\n                </button>\r\n                <button \r\n                  className=\"btn btn-outline\"\r\n                  onClick={() => setGeneratedContent('')}\r\n                  disabled={!generatedContent.trim()}\r\n                >\r\n                  <i className=\"fas fa-trash\"></i>\r\n                  Clear\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"content-output\">\r\n              {generatedContent ? (\r\n                <div className=\"generated-content\">\r\n                  <div className=\"content-text\">\r\n                    {generatedContent}\r\n                  </div>\r\n                  \r\n                  {/* Improvement Tools */}\r\n                  <div className=\"improvement-tools\">\r\n                    <h4>Enhance Content</h4>\r\n                    <div className=\"improvement-buttons\">\r\n                      {improvementTypes.map(type => (\r\n                        <button\r\n                          key={type.value}\r\n                          className=\"btn btn-outline improvement-btn\"\r\n                          onClick={() => handleImprove(type.value)}\r\n                          disabled={isGenerating}\r\n                        >\r\n                          <i className=\"fas fa-wand-magic-sparkles\"></i>\r\n                          {type.label}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Analysis Tools */}\r\n                  <div className=\"analysis-tools\">\r\n                    <h4>Analyze Content</h4>\r\n                    <div className=\"analysis-buttons\">\r\n                      {analysisTypes.map(type => (\r\n                        <button\r\n                          key={type.value}\r\n                          className=\"btn btn-outline analysis-btn\"\r\n                          onClick={() => handleAnalyze(type.value)}\r\n                          disabled={isGenerating}\r\n                        >\r\n                          <i className=\"fas fa-chart-bar\"></i>\r\n                          {type.label}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"empty-content\">\r\n                  <i className=\"fas fa-robot\"></i>\r\n                  <h4>No Content Generated Yet</h4>\r\n                  <p>Enter your instructions above and click \"Generate Content\" to get started.</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Sidebar - History & Templates */}\r\n        <div className=\"sidebar-right\">\r\n          {/* Writing History */}\r\n          <div className=\"history-section\">\r\n            <h3>Recent Generations</h3>\r\n            <div className=\"history-list\">\r\n              {history.length > 0 ? (\r\n                history.map(item => (\r\n                  <div key={item.id} className=\"history-item\">\r\n                    <div className=\"history-header\">\r\n                      <span className=\"history-section\">{item.section}</span>\r\n                      <span className=\"history-time\">{item.timestamp}</span>\r\n                    </div>\r\n                    <div className=\"history-preview\">\r\n                      {item.content.substring(0, 100)}...\r\n                    </div>\r\n                    <div className=\"history-actions\">\r\n                      <button \r\n                        className=\"btn-link\"\r\n                        onClick={() => {\r\n                          setGeneratedContent(item.content);\r\n                          setActiveSection(item.section);\r\n                        }}\r\n                      >\r\n                        <i className=\"fas fa-redo\"></i>\r\n                        Use\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className=\"empty-history\">\r\n                  <i className=\"fas fa-history\"></i>\r\n                  <p>No generation history yet</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Templates */}\r\n          <div className=\"templates-section\">\r\n            <h3>Quick Templates</h3>\r\n            <div className=\"template-buttons\">\r\n              <button \r\n                className=\"btn btn-outline template-btn\"\r\n                onClick={() => handleUseTemplate({\r\n                  prompt: 'Write a compelling needs statement that highlights the urgency of the problem and demonstrates clear community need using relevant statistics and local data.',\r\n                  instructions: 'Focus on specific demographics and include recent data'\r\n                })}\r\n              >\r\n                Needs Statement\r\n              </button>\r\n              <button \r\n                className=\"btn btn-outline template-btn\"\r\n                onClick={() => handleUseTemplate({\r\n                  prompt: 'Create SMART objectives that are specific, measurable, achievable, relevant, and time-bound. Include both process and outcome objectives.',\r\n                  instructions: 'Ensure objectives align with funder priorities'\r\n                })}\r\n              >\r\n                SMART Objectives\r\n              </button>\r\n              <button \r\n                className=\"btn btn-outline template-btn\"\r\n                onClick={() => handleUseTemplate({\r\n                  prompt: 'Develop a detailed methodology section that explains program activities, timeline, staffing, and resources. Justify why this approach will be effective.',\r\n                  instructions: 'Include specific activities and implementation steps'\r\n                })}\r\n              >\r\n                Methodology\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WritingAssistant;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}