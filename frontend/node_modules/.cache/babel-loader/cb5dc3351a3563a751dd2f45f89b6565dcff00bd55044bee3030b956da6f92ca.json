{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Murphy\\\\Downloads\\\\USB-Backup\\\\Grant-AI\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('grantflow-token');\n    const user = localStorage.getItem('grantflow-user');\n    if (token && user) {\n      setCurrentUser(JSON.parse(user));\n      setIsAuthenticated(true);\n      verifyToken(token);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const verifyToken = async token => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setCurrentUser(data.user);\n        setIsAuthenticated(true);\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error('Token verification failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        localStorage.setItem('grantflow-token', data.token);\n        localStorage.setItem('grantflow-user', JSON.stringify(data.user));\n        setCurrentUser(data.user);\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: data.message\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: 'Network error. Please try again.'\n      };\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        localStorage.setItem('grantflow-token', data.token);\n        localStorage.setItem('grantflow-user', JSON.stringify(data.user));\n        setCurrentUser(data.user);\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: data.message\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: 'Network error. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('grantflow-token');\n    localStorage.removeItem('grantflow-user');\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  };\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"SPrStg54O3wVubz+E5eVlYTUFHA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","user","JSON","parse","verifyToken","response","fetch","headers","ok","data","json","logout","error","console","login","email","password","method","body","stringify","success","setItem","message","register","name","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Alex Murphy/Downloads/USB-Backup/Grant-AI/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('grantflow-token');\r\n    const user = localStorage.getItem('grantflow-user');\r\n\r\n    if (token && user) {\r\n      setCurrentUser(JSON.parse(user));\r\n      setIsAuthenticated(true);\r\n      verifyToken(token);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const verifyToken = async (token) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCurrentUser(data.user);\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        logout();\r\n      }\r\n    } catch (error) {\r\n      console.error('Token verification failed:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        localStorage.setItem('grantflow-token', data.token);\r\n        localStorage.setItem('grantflow-user', JSON.stringify(data.user));\r\n        setCurrentUser(data.user);\r\n        setIsAuthenticated(true);\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, message: 'Network error. Please try again.' };\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        localStorage.setItem('grantflow-token', data.token);\r\n        localStorage.setItem('grantflow-user', JSON.stringify(data.user));\r\n        setCurrentUser(data.user);\r\n        setIsAuthenticated(true);\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, message: 'Network error. Please try again.' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('grantflow-token');\r\n    localStorage.removeItem('grantflow-user');\r\n    setCurrentUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASO,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7DE,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IACrD,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAEnD,IAAIF,KAAK,IAAIG,IAAI,EAAE;MACjBR,cAAc,CAACS,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,CAAC;MAChCJ,kBAAkB,CAAC,IAAI,CAAC;MACxBO,WAAW,CAACN,KAAK,CAAC;IACpB,CAAC,MAAM;MACLH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,WAAW,GAAG,MAAON,KAAK,IAAK;IACnC,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUT,KAAK;QAClC;MACF,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCjB,cAAc,CAACgB,IAAI,CAACR,IAAI,CAAC;QACzBJ,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,MAAM;QACLc,MAAM,CAAC,CAAC;MACV;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDD,MAAM,CAAC,CAAC;IACV,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMmB,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEW,MAAM,EAAE,MAAM;QACdV,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDW,IAAI,EAAEhB,IAAI,CAACiB,SAAS,CAAC;UAAEJ,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMP,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACW,OAAO,EAAE;QAChBrB,YAAY,CAACsB,OAAO,CAAC,iBAAiB,EAAEZ,IAAI,CAACX,KAAK,CAAC;QACnDC,YAAY,CAACsB,OAAO,CAAC,gBAAgB,EAAEnB,IAAI,CAACiB,SAAS,CAACV,IAAI,CAACR,IAAI,CAAC,CAAC;QACjER,cAAc,CAACgB,IAAI,CAACR,IAAI,CAAC;QACzBJ,kBAAkB,CAAC,IAAI,CAAC;QACxB,OAAO;UAAEuB,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACL,OAAO;UAAEA,OAAO,EAAE,KAAK;UAAEE,OAAO,EAAEb,IAAI,CAACa;QAAQ,CAAC;MAClD;IACF,CAAC,CAAC,OAAOV,KAAK,EAAE;MACd,OAAO;QAAEQ,OAAO,EAAE,KAAK;QAAEE,OAAO,EAAE;MAAmC,CAAC;IACxE;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAET,KAAK,EAAEC,QAAQ,KAAK;IAChD,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEW,MAAM,EAAE,MAAM;QACdV,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDW,IAAI,EAAEhB,IAAI,CAACiB,SAAS,CAAC;UAAEK,IAAI;UAAET,KAAK;UAAEC;QAAS,CAAC;MAChD,CAAC,CAAC;MAEF,MAAMP,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACW,OAAO,EAAE;QAChBrB,YAAY,CAACsB,OAAO,CAAC,iBAAiB,EAAEZ,IAAI,CAACX,KAAK,CAAC;QACnDC,YAAY,CAACsB,OAAO,CAAC,gBAAgB,EAAEnB,IAAI,CAACiB,SAAS,CAACV,IAAI,CAACR,IAAI,CAAC,CAAC;QACjER,cAAc,CAACgB,IAAI,CAACR,IAAI,CAAC;QACzBJ,kBAAkB,CAAC,IAAI,CAAC;QACxB,OAAO;UAAEuB,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACL,OAAO;UAAEA,OAAO,EAAE,KAAK;UAAEE,OAAO,EAAEb,IAAI,CAACa;QAAQ,CAAC;MAClD;IACF,CAAC,CAAC,OAAOV,KAAK,EAAE;MACd,OAAO;QAAEQ,OAAO,EAAE,KAAK;QAAEE,OAAO,EAAE;MAAmC,CAAC;IACxE;EACF,CAAC;EAED,MAAMX,MAAM,GAAGA,CAAA,KAAM;IACnBZ,YAAY,CAAC0B,UAAU,CAAC,iBAAiB,CAAC;IAC1C1B,YAAY,CAAC0B,UAAU,CAAC,gBAAgB,CAAC;IACzChC,cAAc,CAAC,IAAI,CAAC;IACpBI,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAM6B,KAAK,GAAG;IACZlC,WAAW;IACXI,eAAe;IACfF,OAAO;IACPoB,KAAK;IACLS,QAAQ;IACRZ;EACF,CAAC;EAED,oBACE1B,OAAA,CAACC,WAAW,CAACyC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApC,QAAA,EAChCA;EAAQ;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACxC,GAAA,CAlHeF,YAAY;AAAA2C,EAAA,GAAZ3C,YAAY;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}