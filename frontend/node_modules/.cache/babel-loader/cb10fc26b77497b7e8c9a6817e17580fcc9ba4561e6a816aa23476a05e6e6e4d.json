{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Murphy\\\\Downloads\\\\USB-Backup\\\\Grant-AI\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Reports\\\\ReportBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportBuilder = ({\n  onCreateReport\n}) => {\n  _s();\n  const [reportType, setReportType] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const reportTypes = [{\n    id: 'progress',\n    name: 'Progress Report',\n    description: 'Track project milestones and achievements',\n    icon: '📈'\n  }, {\n    id: 'financial',\n    name: 'Financial Report',\n    description: 'Budget, expenses, and financial analysis',\n    icon: '💰'\n  }, {\n    id: 'analytical',\n    name: 'Analytical Report',\n    description: 'Data analysis and insights',\n    icon: '🔍'\n  }, {\n    id: 'research',\n    name: 'Research Report',\n    description: 'Research findings and conclusions',\n    icon: '📚'\n  }, {\n    id: 'executive',\n    name: 'Executive Summary',\n    description: 'High-level overview for stakeholders',\n    icon: '👔'\n  }, {\n    id: 'custom',\n    name: 'Custom Report',\n    description: 'Build from scratch',\n    icon: '⚙️'\n  }];\n  const handleCreateReport = type => {\n    const template = reportTypes.find(t => t.id === type);\n    onCreateReport({\n      type: type,\n      title: title || `${template.name} - ${new Date().toLocaleDateString()}`,\n      description: description,\n      template: template\n    });\n\n    // Reset form\n    setTitle('');\n    setDescription('');\n    setReportType('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-builder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"builder-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a report type and configure basic settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"builder-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reportTitle\",\n          children: \"Report Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"reportTitle\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Enter report title...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reportDescription\",\n          children: \"Description (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"reportDescription\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Brief description of the report...\",\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-types-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Report Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"types-grid\",\n          children: reportTypes.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `type-card ${reportType === type.id ? 'selected' : ''}`,\n            onClick: () => setReportType(type.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"type-icon\",\n              children: type.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: type.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: type.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, type.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"builder-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          disabled: !reportType,\n          onClick: () => handleCreateReport(reportType),\n          children: \"Create Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportBuilder, \"AeIr/nO6uM+7942Ha8dTzLLFpvA=\");\n_c = ReportBuilder;\nexport default ReportBuilder;\nvar _c;\n$RefreshReg$(_c, \"ReportBuilder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReportBuilder","onCreateReport","_s","reportType","setReportType","title","setTitle","description","setDescription","reportTypes","id","name","icon","handleCreateReport","type","template","find","t","Date","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","e","target","placeholder","rows","map","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Alex Murphy/Downloads/USB-Backup/Grant-AI/frontend/src/components/Dashboard/Reports/ReportBuilder.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ReportBuilder = ({ onCreateReport }) => {\r\n  const [reportType, setReportType] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const reportTypes = [\r\n    {\r\n      id: 'progress',\r\n      name: 'Progress Report',\r\n      description: 'Track project milestones and achievements',\r\n      icon: '📈'\r\n    },\r\n    {\r\n      id: 'financial',\r\n      name: 'Financial Report',\r\n      description: 'Budget, expenses, and financial analysis',\r\n      icon: '💰'\r\n    },\r\n    {\r\n      id: 'analytical',\r\n      name: 'Analytical Report',\r\n      description: 'Data analysis and insights',\r\n      icon: '🔍'\r\n    },\r\n    {\r\n      id: 'research',\r\n      name: 'Research Report',\r\n      description: 'Research findings and conclusions',\r\n      icon: '📚'\r\n    },\r\n    {\r\n      id: 'executive',\r\n      name: 'Executive Summary',\r\n      description: 'High-level overview for stakeholders',\r\n      icon: '👔'\r\n    },\r\n    {\r\n      id: 'custom',\r\n      name: 'Custom Report',\r\n      description: 'Build from scratch',\r\n      icon: '⚙️'\r\n    }\r\n  ];\r\n\r\n  const handleCreateReport = (type) => {\r\n    const template = reportTypes.find(t => t.id === type);\r\n    onCreateReport({\r\n      type: type,\r\n      title: title || `${template.name} - ${new Date().toLocaleDateString()}`,\r\n      description: description,\r\n      template: template\r\n    });\r\n    \r\n    // Reset form\r\n    setTitle('');\r\n    setDescription('');\r\n    setReportType('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"report-builder\">\r\n      <div className=\"builder-header\">\r\n        <h2>Create New Report</h2>\r\n        <p>Select a report type and configure basic settings</p>\r\n      </div>\r\n\r\n      <div className=\"builder-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reportTitle\">Report Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"reportTitle\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"Enter report title...\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reportDescription\">Description (Optional)</label>\r\n          <textarea\r\n            id=\"reportDescription\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"Brief description of the report...\"\r\n            rows=\"3\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"report-types-grid\">\r\n          <h3>Select Report Type</h3>\r\n          <div className=\"types-grid\">\r\n            {reportTypes.map(type => (\r\n              <div\r\n                key={type.id}\r\n                className={`type-card ${reportType === type.id ? 'selected' : ''}`}\r\n                onClick={() => setReportType(type.id)}\r\n              >\r\n                <div className=\"type-icon\">{type.icon}</div>\r\n                <h4>{type.name}</h4>\r\n                <p>{type.description}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"builder-actions\">\r\n          <button\r\n            className=\"primary-button\"\r\n            disabled={!reportType}\r\n            onClick={() => handleCreateReport(reportType)}\r\n          >\r\n            Create Report\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}